input {
        file {
                path => '/tmp/moni/moni.txt'
                type => 'moni'
                tags => 'moni'
                format => 'plain'
        }
}

input {
        file {
                path => '/tmp/moni2/moni.txt'
                type => 'moni'
                tags => 'moni'
                format => 'plain'
        }
}

filter {
        grok {
                type => 'moni'
                pattern => "%{TIMESTAMP_ISO8601:time} %{USERNAME:tipo} %{USERNAME:ambiente} %{GREEDYDATA:payload}"
                }
        mutate {
                type => 'moni'
                replace => ["@message", "%{payload}"]
                add_tag => ["%{tipo}"]
        }

        grok {
                tags => ["DATASOURCE"]
                pattern => "%{USERNAME:host} %{USERNAME:servidor} %{USERNAME:target} %{USERNAME:instance} %{USERNAME:pool} %{NUMBER:MaxPoolSize} %{NUMBER:InUseCount} %{NUMBER:AvailableCount}"
        }
        mutate {
                convert => ["MaxPoolSize", "integer"]
                convert => ["AvailableCount", "integer"]
                convert => ["InUseCount", "integer"]
        }



        grok {
                tags => ["JVMMEMORIA"]
                pattern => "%{USERNAME:host} %{USERNAME:servidor} %{USERNAME:target} %{USERNAME:instance} %{NUMBER:MaxHeap} %{NUMBER:heapInUse} %{NUMBER:permGen} %{NUMBER:permGenInUse}"
        }
         mutate {
                convert => ["MaxHeap", "integer"]
                convert => ["heapInUse", "integer"]
                convert => ["permGen", "integer"]
                convert => ["permGenInUse", "integer"]
        }

        grok {
                tags => ["HTTPSESSION"]
                pattern => "%{USERNAME:host} %{USERNAME:servidor} %{USERNAME:target} %{USERNAME:instance} %{USERNAME:aplicacao} %{USERNAME:SessoesHttp}"
        }
         mutate {
                convert => ["SessoesHttp", "integer"]
        }
        grok {
                tags => ["HOSTMETRIC"]
                pattern => "%{USERNAME:host} %{BASE10NUM:cpu} %{BASE10NUM:memory} %{BASE10NUM:freeMemory} %{BASE10NUM:swapp} %{BASE10NUM:freeSwap}"
        }
         mutate {
                convert => ["cpu", "integer"]
                convert => ["memory", "integer"]
                convert => ["freeMemory", "integer"]
                convert => ["swap", "integer"]
                convert => ["freeSwap", "integer"]
        }

        grok {
                tags => ["INSTANCE"]
                pattern => "%{USERNAME:host} %{USERNAME:servidor} %{USERNAME:target} %{USERNAME:instance} %{USERNAME:port}"
        }

        grok {
                tags => ["APPLICATION"]
                pattern => "%{USERNAME:host} %{USERNAME:servidor} %{USERNAME:target} %{USERNAME:instance} %{USERNAME:app} %{UNIXPATH:context}"
        }

        grok {
                tags => ["HTTPTHREAD"]
                pattern => "%{USERNAME:host} %{USERNAME:servidor} %{USERNAME:instance} %{USERNAME:pool} %{BASE10NUM:QueueMax} %{BASE10NUM:QueueSize}"
        }

        mutate {
                convert => ["QueueMax", "integer"]
                convert => ["QueueSize", "integer"]
        }
}


output {
  stdout { debug => true debug_format => "json"}
  redis { host => "IP_ELASTICSEARCH" data_type => "list" key => "logstash" }
}

